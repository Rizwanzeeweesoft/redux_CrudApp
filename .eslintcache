[{"D:\\ReactRedux\\redux\\src\\index.js":"1","D:\\ReactRedux\\redux\\src\\App.js":"2","D:\\ReactRedux\\redux\\src\\swDev.js":"3","D:\\ReactRedux\\redux\\src\\Redux\\Store.js":"4","D:\\ReactRedux\\redux\\src\\Header.jsx":"5","D:\\ReactRedux\\redux\\src\\components\\Home.jsx":"6","D:\\ReactRedux\\redux\\src\\components\\Form.jsx":"7","D:\\ReactRedux\\redux\\src\\components\\FormEdit.jsx":"8","D:\\ReactRedux\\redux\\src\\Redux\\Reducer\\index.js":"9","D:\\ReactRedux\\redux\\src\\Redux\\Actions\\action.js":"10","D:\\ReactRedux\\redux\\src\\Redux\\Reducer\\reducer.js":"11","D:\\ReactRedux\\redux\\src\\Redux\\Actions\\type.js":"12"},{"size":698,"mtime":1629044264815,"results":"13","hashOfConfig":"14"},{"size":1177,"mtime":1629045581195,"results":"15","hashOfConfig":"14"},{"size":156,"mtime":1629045611760,"results":"16","hashOfConfig":"14"},{"size":671,"mtime":1629044235269,"results":"17","hashOfConfig":"14"},{"size":1603,"mtime":1626287811448,"results":"18","hashOfConfig":"14"},{"size":4619,"mtime":1629044316650,"results":"19","hashOfConfig":"14"},{"size":12413,"mtime":1625935682504,"results":"20","hashOfConfig":"14"},{"size":11367,"mtime":1629045711890,"results":"21","hashOfConfig":"14"},{"size":184,"mtime":1625935682347,"results":"22","hashOfConfig":"14"},{"size":2223,"mtime":1626284854127,"results":"23","hashOfConfig":"14"},{"size":1114,"mtime":1629038970350,"results":"24","hashOfConfig":"14"},{"size":205,"mtime":1625935682243,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"pcah47",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\ReactRedux\\redux\\src\\index.js",[],["54","55"],"D:\\ReactRedux\\redux\\src\\App.js",[],"D:\\ReactRedux\\redux\\src\\swDev.js",[],"D:\\ReactRedux\\redux\\src\\Redux\\Store.js",[],"D:\\ReactRedux\\redux\\src\\Header.jsx",["56"],"import React from \"react\";\nimport { connect, useDispatch } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, } from \"react-bootstrap\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\n// import HomeIcon from '@material-ui/icons/Home';\n// import PersonAddIcon from '@material-ui/icons/PersonAdd';\n// import ContactSupportIcon from '@material-ui/icons/ContactSupport';\n// import LocalMallIcon from '@material-ui/icons/LocalMall';\n// import ContactsIcon from '@material-ui/icons/Contacts';\n\n\nconst Header = () => {\n\n    const dispatch = useDispatch();\n    \n    const handleOpen = () => {\n        dispatch({ type: 'SHOW'});\n    }\n\n    return (\n\n        <>\n            <header>\n                <div className=\"container-fluid\">\n                <button type=\"button\" onClick={()=>handleOpen()} className=\"btn btn-success\">click</button>\n                    <Navbar expand=\"lg\">\n                        <Navbar.Brand to=\"/Home\" >Albiorix</Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"ml-auto\">\n                                <Link to=\"/Home\">  <AssignmentIndIcon /> User List</Link>\n                                <Link to=\"/form\"> Form</Link>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </div>\n            </header>\n        </>\n\n    );\n}\n\n\nexport default Header;","D:\\ReactRedux\\redux\\src\\components\\Home.jsx",["57"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { deleteuser, FetchList } from \"../Redux/Actions/action\"\n\nconst Home = () => {\n\n    const dispatch = useDispatch();\n\n    const onDelete = (myid) => {\n        dispatch(deleteuser(myid));\n    }\n\n    useEffect(()=>{\n        dispatch(FetchList())\n    },[])\n\n    const products = useSelector(state => state.posts.items.data )\n\n\n    return (\n        <div className=\"Card_Section\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n\n                        <div className=\"card\" style={{ width: \"100%\" }}>\n                            <div className=\"card-header\">\n                                <Link to=\"/form\" className=\"btn btn-primary float-right\">Add</Link>\n                            </div>\n                            <div className=\"card-body\">\n                                <table class=\"table\">\n                                    <thead class=\"thead-dark\">\n                                        <tr>\n                                            <th scope=\"col\">#</th>\n                                            <th scope=\"col\">FullName</th>\n                                            <th scope=\"col\">Email</th>\n                                            {/* <th scope=\"col\">Phone</th>\n                                            <th scope=\"col\">Country</th>\n                                            <th scope=\"col\">City</th>\n                                            <th scope=\"col\">State</th>\n                                            <th scope=\"col\">Date of Birth</th> */}\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n\n                                        {\n                                              products && products.length >= 0 && products.map((post, idx) => {\n                                                    return (\n                                                        <tr>\n                                                            <th scope=\"row\" key={post.id}>{idx + 1}</th>\n                                                            <td>{post.title} &nbsp; {post.LastName}</td>\n                                                            <td>{post.body}</td>\n                                                            {/* <td>{post.Phone}</td>\n                                                            <th>{post.Address.Country}</th>\n                                                            <td>{post.Address.City}</td>\n                                                            <td>{post.Address.State}</td>\n                                                            <td>{post.DateofBirth}</td> */}\n                                                            <td>\n                                                                <Link to={`/edit-user/${post.id}`}>\n                                                                    <button type=\"button\" className=\"btn btn-warning\" style={{ color: \"#fff\", cursor: \"pointer\", fontSize: \"12px\" }}>Edit</button>\n                                                                </Link>\n                                                                &nbsp;\n                                                                <button type=\"button\" className=\"btn btn-danger\" style={{ color: \"#fff\", fontSize: \"12px\" }} onClick={() => onDelete(post.id)} >Delete</button></td>\n                                                        </tr>\n                                                    )\n                                                })\n                                        \n                                        }\n\n\n                                        {\n                                            ! products && \n                                            <p>No data available</p>\n                                        }\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         onDelete: async (id) => {\n//             await dispatch(deleteuser(id));\n//         },\n//     }\n// };\n\nexport default connect(null,{deleteuser, FetchList})(Home);","D:\\ReactRedux\\redux\\src\\components\\Form.jsx",["58"],"import React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { useHistory } from \"react-router\";\nimport { login } from '../Redux/Actions/action';\n\nconst Form = (props) => {\n    const history = useHistory();\n\n    const [FirstName, setFirstName] = useState(\"\");\n    const [LastName, setLastName] = useState(\"\");\n    const [Email, setEmail] = useState(\"\");\n    const [Phone, setPhone] = useState(\"\");\n    const [DateofBirth, setDateofBirth] = useState(\"\");\n    const [Password, setPassword] = useState(\"\");\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\n    const [Country, setCountry] = useState(\"\");\n    const [City, setCity] = useState(\"\");\n    const [State, setState] = useState(\"\");\n    \n\n    /////// Error State ////////\n    const [ErrFirstname, SetErrFirstname] = useState();\n    const [ErrLastname, SetErrLastname] = useState();\n    const [ErrEmail, SetErrEmail] = useState();\n    const [ErrCountry, SetErrCountry] = useState();\n    const [ErrCity, SetErrCity] = useState();\n    const [ErrState, SetErrState] = useState();\n    const [ErrPhone, SetErrPhone] = useState();\n    const [ErrPassword, SetErrPassword] = useState();\n    const [ErrDateofBirth, SetErrDateofBirth] = useState();\n    const [ErrConfirmPassword, SetErrConfirmPassword] = useState();\n\n\n    const SubmitHandle = (event) =>{\n        event.preventDefault();\n\n        var errorcount = 0;\n\n        if (FirstName === \"\" || FirstName.trim() === \"\") {\n            SetErrFirstname(\"*FirstName is required.\");\n            errorcount++;\n        }\n       else if (!/^[a-zA-Z ]*$/g.test(FirstName)) {\n        SetErrFirstname(\"FirstName contain only letters\");\n        errorcount++;\n        }\n         else {\n            SetErrFirstname(\"\");\n        }\n\n        if (LastName === \"\" || LastName.trim() === \"\") {\n            SetErrLastname(\"*LastName is required.\");\n            errorcount++;\n        }\n       else if (!/^[a-zA-Z ]*$/g.test(LastName)) {\n        SetErrLastname(\"LastName contain only letters\");\n        errorcount++;\n        }\n         else {\n            SetErrLastname(\"\");\n        }\n\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n        if (Email === \"\" || Email.trim() === \"\") {\n            SetErrEmail(\"*Email is required.\");\n            errorcount++;\n        } else if (!pattern.test(Email)) {\n\n            SetErrEmail(\"*Email is invalid.\");\n            errorcount++;\n        } else {\n            SetErrEmail(\"\");\n        }\n\n        if (Country === \"\" || Country.trim() === \"\") {\n            SetErrCountry(\"*Country is required.\");\n            errorcount++;\n        } else {\n            SetErrCountry(\"\");\n        }\n\n        if (City === \"\" || City.trim() === \"\") {\n            SetErrCity(\"*City is required.\");\n            errorcount++;\n        } else {\n            SetErrCity(\"\");\n        }\n\n        if (State === \"\" || State.trim() === \"\") {\n            SetErrState(\"*State is required.\");\n            errorcount++;\n        } else {\n            SetErrState(\"\");\n        }\n\n        if (Phone === \"\" || Phone.trim() === \"\") {\n            SetErrPhone(\"*Phone number is required.\");\n            errorcount++;\n        } else if (Phone.length < 10) {\n            SetErrPhone(\"*Phone number should be greater than 10.\");\n            errorcount++;\n        }\n        else if (Phone.length > 10) {\n            SetErrPhone(\"*Phone number should be smaller than 10.\");\n            errorcount++;\n        } else {\n            SetErrPhone(\"\");\n        }\n\n        if (Password === \"\" || Password.trim() === \"\") {\n            SetErrPassword(\"*Password is required.\");\n            errorcount++;\n        } else if (Password.length < 6) {\n            SetErrPassword(\"*Password should be greater than 6.\");\n            errorcount++;\n        } else {\n            SetErrPassword(\"\");\n        }\n        // alert(signUp.ConfirmPassword)\n        if (Password === \"\" || Password.trim() === \"\") {\n            // alert('ok')\n            SetErrConfirmPassword(\"*Password is required.\");\n            errorcount++;\n        } else if (Password !== confirmPassword) {\n            SetErrConfirmPassword(\"*Password did not match.\");\n            errorcount++;\n        } else {\n            SetErrConfirmPassword(\"\")\n        }\n\n        if (DateofBirth === \"\" || DateofBirth.trim() === \"\") {\n            SetErrDateofBirth(\"*Date of Birth is required.\");\n            errorcount++;\n        } else {\n            SetErrDateofBirth(\"\");\n        }\n\n        if (errorcount === 0) {\n        const result = {\n            FirstName: FirstName,\n            LastName: LastName,\n            Email:Email,\n            Phone:Phone,\n            DateofBirth:DateofBirth,\n            Password:Password,\n            Address:{\n                Country:Country,\n                City:City,\n                State:State,\n            }\n          };\n          props.login(result);\n          history.push('/Home');\n        }\n    }\n\n    console.log(\"hello\",Country);\n   \n\n    \n\n    return (\n        <>\n            <section class=\"Login\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8 offset-sm-2\">\n                            <div class=\"LoginCard default-form\">\n                                <h5>Form</h5>\n                                <form onSubmit={(event)=>SubmitHandle(event)}>\n                                    <div class=\"form-group\">\n                                        <label for=\"\">First Name</label>\n                                        <input \n                                        type=\"text\" \n                                        class=\"form-control\" \n                                        placeholder=\"Name\" \n                                        name=\"FirstName\" \n                                        \n                                        onChange={(event)=>setFirstName(event.target.value)}/>\n                                        <p className=\"text-danger\">{ErrFirstname}</p>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"\">Last Name</label>\n                                        <input \n                                        type=\"text\" \n                                        class=\"form-control\" \n                                        placeholder=\"Name\" \n                                        name=\"LastName\" \n                                        onChange={(event)=>setLastName(event.target.value)}/>\n                                        <p className=\"text-danger\">{ErrLastname}</p>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"\">Email</label>\n                                        <input type=\"email\" class=\"form-control\" placeholder=\"Email\" name=\"Email\" onChange={(event)=>setEmail(event.target.value)} />\n                                        <p className=\"text-danger\">{ErrEmail}</p>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"\">Phone</label>\n                                        <input type=\"number\" class=\"form-control\" placeholder=\"phone\" name=\"Phone\" onChange={(event)=>setPhone(event.target.value)} />\n                                        <p className=\"text-danger\">{ErrPhone}</p>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"\">Country</label>\n                                        <select name=\"Country\" id=\"\" class=\"form-control\" onChange={(event)=>setCountry(event.target.value)}>\n                                        <option value=\"\" selected disabled>--select--</option>\n                                            <option value=\"India\">India</option>\n                                            <option value=\"USA\">USA</option>\n                                            <option value=\"UAE\">UAE</option>\n                                        </select>\n                                        <p className=\"text-danger\">{ErrCountry}</p>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"\">City</label>\n                                        <select name=\"City\" id=\"\" class=\"form-control\" onChange={(event)=>setCity(event.target.value)}>\n                                        <option value=\"\" selected disabled>--select--</option>\n                                            <option value=\"Indore\">Indore</option>\n                                            <option value=\"New York\">New York</option>\n                                            <option value=\"Ahmedabad\">Ahmedabad</option>\n                                            <option value=\"Germany\">Germany</option>\n                                            <option value=\"Mumbai\">Mumbai</option>\n                                            <option value=\"Dubai\">Dubai</option>\n                                        </select>\n                                        <p className=\"text-danger\">{ErrCity}</p>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"\">State</label>\n                                        \n                                        <select name=\"State\" id=\"\" class=\"form-control\" onChange={(event)=>setState(event.target.value)}>\n                                        <option value=\"\" selected disabled>--select--</option>\n                                            <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\n                                            <option value=\"Maharashtra\">Maharashtra</option>\n                                            <option value=\"Gujarat\">Gujarat</option>\n                                            <option value=\"Gujarat\">Gujarat</option>\n                                            <option value=\"no state\">no state</option>\n                                        </select>\n                                        <p className=\"text-danger\">{ErrState}</p>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"\">Date of Birth</label>\n                                        <input type=\"date\" className=\"form-control\" name=\"DateofBirth\" onChange={(event)=>setDateofBirth(event.target.value)}/>\n                                        <p className=\"text-danger\">{ErrDateofBirth}</p>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"\">Password</label>\n                                        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" name=\"Password\" onChange={(event)=>setPassword(event.target.value)}  />\n                                        <p className=\"text-danger\">{ErrPassword}</p>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"\">Confirm Password</label>\n                                        <input type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\" name=\"password\" name=\"Password\" onChange={(event)=>setconfirmPassword(event.target.value)}/>\n                                        <p className=\"text-danger\">{ErrConfirmPassword}</p>\n                                    </div>\n                                    <div class=\"form-group text-center\">\n                                        <button type=\"submit\" class=\"cardbutton\">Submit</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n}\n\nexport default connect(null, { login })(Form);","D:\\ReactRedux\\redux\\src\\components\\FormEdit.jsx",["59","60"],"D:\\ReactRedux\\redux\\src\\Redux\\Reducer\\index.js",[],"D:\\ReactRedux\\redux\\src\\Redux\\Actions\\action.js",[],"D:\\ReactRedux\\redux\\src\\Redux\\Reducer\\reducer.js",[],"D:\\ReactRedux\\redux\\src\\Redux\\Actions\\type.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":16,"column":7,"nodeType":"71","endLine":16,"endColumn":9,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":250,"column":132,"nodeType":"75","endLine":250,"endColumn":147},{"ruleId":"65","severity":1,"message":"76","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":20},{"ruleId":"69","severity":1,"message":"77","line":14,"column":8,"nodeType":"71","endLine":14,"endColumn":10,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["81"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'param.id'. Either include them or remove the dependency array.",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [dispatch]",{"range":"87","text":"88"},"Update the dependencies array to be: [dispatch, param.id]",{"range":"89","text":"90"},[404,406],"[dispatch]",[454,456],"[dispatch, param.id]"]